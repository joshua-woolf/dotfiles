[color]
	ui = true
[pull]
	rebase = true
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[fetch]
  prune = true
[init]
  defaultBranch = main
[user]
	name = Joshua Woolf
	email = joshuawoolf87@gmail.com
[push]
	autoSetupRemote = true
	followTags = true
[rebase]
	autoStash = true
[alias]
  # List unique commit authors with emails (exclude GitHub noreply)
  authors = !git log --format='%aN <%aE>' | grep -v 'users.noreply.github.com' | sort -u --ignore-case
  # Contributors summary (commit counts per author)
  contrib = shortlog --summary --numbered
  # Full cleanup: checkout main, fetch/prune, prune worktrees, pull, clean, prune remotes, delete branches with gone upstreams
  gtm = "!git checkout main && git fetch --prune && git worktree prune && git pull && git clean -fdx && git remote prune origin; git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -d"
  # Pretty one-line graph with relative time and author
  l = log --graph --abbrev-commit --pretty=format:'%Cred%h%Creset %Cgreen%ad%Creset %s %C(blue)<%an>%Creset%C(yellow)%d%Creset' --date=short
  # Log since N days ago (default 1) for current user
  ld = "!sh -c \"git log --since '${1:-1} days ago' --oneline --author $(git config user.email)\" -"
  # Bullet-style log for release notes
  lm = log --pretty=format:'* %s (%h)'
  # Show remotes with fetch/push details
  remotes = remote -vv
  # Hard reset working tree to HEAD (discard changes)
  rh = reset --hard HEAD
  # Short status with branch
  s = status -sb
  # List all tags
  tags = tag -l
  # Update current repo: fetch/prune, prune worktrees, then pull
  u = "!git fetch --prune && git worktree prune && git pull"
